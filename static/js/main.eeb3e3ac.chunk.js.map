{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5-rrd-v6/pages/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5-rrd-v6/pages/Error404.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/SuperJunior.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","message","avatarContent","alt","width","height","avatar","src","coner","content","name","ask","note","time","messageData","HW1","Affair","h2","contant","affair","priority","delete","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","container","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","item","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyDownInput","inputClass","s","value","onKeyDown","onChange","count","errorText","GreetingContainer","users","addUserCallback","setName","setError","alert","length","event","currentTarget","e","HW3","setUsers","console","log","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","number","page","Junior","SuperJunior","PATH","Pages","path","element","to","Header","click","setClick","wrapper","panel","panelActive","preJunior","junior","superJunior","btn","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.eeb3e3ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affairs_container__31bi9\",\"button\":\"Affairs_button__1Ot3H\",\"contant\":\"Affairs_contant__sumJ1\",\"name\":\"Affairs_name__CITao\",\"priority\":\"Affairs_priority__3DacS\",\"delete\":\"Affairs_delete__1b5M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__1paWO\",\"panel\":\"Header_panel__IBcAv\",\"panelActive\":\"Header_panelActive__2K7V1\",\"content\":\"Header_content__25grt\",\"preJunior\":\"Header_preJunior__1qETN\",\"junior\":\"Header_junior__1ToKh\",\"superJunior\":\"Header_superJunior__2eHty\",\"btn\":\"Header_btn__2lSfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeworks\":\"Message_homeworks__5PukC\",\"message\":\"Message_message__32gB-\",\"avatarContent\":\"Message_avatarContent__v5EWb\",\"avatar\":\"Message_avatar__68rd8\",\"coner\":\"Message_coner__3QtIl\",\"content\":\"Message_content__1DvXQ\",\"name\":\"Message_name__1CVpA\",\"ask\":\"Message_ask__Q4kpR\",\"note\":\"Message_note__38Kb6\",\"time\":\"Message_time__ctvSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3Rst-\",\"count\":\"Greeting_count__2k8q_\",\"button\":\"Greeting_button__3SF9c\",\"error\":\"Greeting_error__2NPYF\",\"errorText\":\"Greeting_errorText__1Mtrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Error404_content__Z6N-c\",\"number\":\"Error404_number__3dXXa\",\"text\":\"Error404_text__O-PaH\",\"page\":\"Error404_page__2toU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2ynT0\",\"errorInput\":\"SuperInputText_errorInput__1mnjU\",\"error\":\"SuperInputText_error__1RlRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__yBjen\",\"column\":\"HW4_column__2_dlI\",\"testSpanError\":\"HW4_testSpanError__E1tkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2hYqA\",\"red\":\"SuperButton_red__1L1_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__cvt_Y\",\"spanClassName\":\"SuperCheckbox_spanClassName__1fOX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3Tu3B\"};","import React from 'react'\nimport classes from \"./Message.module.css\";\n\nexport type messageDataProps = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: messageDataProps) {\n    return (\n        <>\n            <div className={classes.message}>\n                <div className={classes.avatarContent}>\n                    <img alt=\"avatar\" width=\"50\" height=\"50\" className={classes.avatar} src={props.avatar}/>\n                </div>\n                <div className={classes.coner}></div>\n                <div className={classes.content}>\n                    <div className={classes.name}>{props.name}</div>\n                    <div className={classes.ask}>\n                        <div className={classes.note}>{props.message}</div>\n                        <div className={classes.time}>{props.time}</div>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Sophya',\n    message: 'How are you?',\n    time: '22:00',\n   }\n\nfunction HW1() {\n\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n                />\n\n            {/*<hr/>*/}\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            {/*<hr/>*/}\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport h2 from \"./Affairs.module.css\"\n\nexport type AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType /// need to fix any\n    deleteAffairCallback: (_id: number) => void /// may be it will be correct\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div className={h2.contant}>\n            <div className={h2.name}>{props.affair.name}</div>\n            <div className={h2.priority}>{props.affair.priority}</div>\n            <button className={h2.delete} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport h2 from './Affairs.module.css'\n\nexport type AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void/// may be it will be correct\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair ={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div className={h2.container}>\n\n            { mappedAffairs }\n\n            <button className={h2.button} onClick={setAll}>All</button>\n            <button className={h2.button} onClick={setHigh}>High</button>\n            <button className={h2.button} onClick={setMiddle}>Middle</button>\n            <button className={h2.button} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\n\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ /// need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\n    /// need to fix any\n    if (filter === 'low') {\n        return affairs.filter(item => item.priority === 'low')\n    }\n    if (filter === 'high') {\n        return affairs.filter(item => item.priority === 'high')\n    }\n    if (filter === 'middle') {\n        return affairs.filter(item => item.priority === 'middle')\n    } else return affairs\n    //else return /// need to fix\n}\n\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\n    return affairs.filter(item => item._id !== _id)\n    /// need to fix\n}\n\nfunction HW2() {\n\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) /// need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) /// need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport {KeyboardEvent} from \"react\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event:ChangeEvent<HTMLInputElement>)=> void // need to fix any\n    addUser: ()=> void // need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n    onKeyDownInput:(e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers,onKeyDownInput} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : ''\n\n    return (\n        <div>\n            <input value={name}\n                   onKeyDown={onKeyDownInput}\n                   onChange={setNameCallback}\n                   className={inputClass}\n            />\n            <button onClick={addUser} className={s.button}>add</button>\n            <span className={s.count}>{totalUsers}</span>\n            <div className={s.errorText} ><span>{error}</span></div>\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\nimport {KeyboardEvent} from \"react\";\n\nexport type GreetingContainerPropsType = {\n    users: UserType[]\n    addUserCallback: (name: string) => void/// may be correct\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') /// need to fix any\n    const [error, setError] = useState<string | null>(null) /// need to fix any\n\n    const setNameCallback = (event:ChangeEvent<HTMLInputElement> ) => { // need to fix any\n        setName(event.currentTarget.value)\n        //setName('') // need to fix\n    }\n    const addUser = () => {\n       if (name) {\n            addUserCallback(name)\n            alert(`Hello ${name} !`) /// need to fix\n        } else {\n         setError('Field is required');\n       }\n        setName('')\n    }\n\n    const onKeyDownInput = (e: KeyboardEvent<HTMLInputElement> ) => {\n        if (e.key === 'Enter') addUser()\n    }\n\n    const totalUsers = users.length // need to fix\n\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onKeyDownInput={onKeyDownInput}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string /// need to fix any\n    name: string /// need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) /// need to fix any\n\n    const addUserCallback = (name: string) => { /// need to fix any\n           const user = {_id:v1(), name:name }\n            setUsers([user, ...users]) // need to fix\n    }\nconsole.log(users)\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? s.superInput : ''}` /// need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n       /// сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport s from './Error404.module.css'\n\n\nfunction Error404() {\n    return (\n        <div className={s.content}>\n            <div className={s.number}>404</div>\n            <div className={s.text}>Page not found!</div>\n            <div className={s.page}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            {/*<HW7/>*/}\r\n            {/*<HW8/>*/}\r\n            {/*<HW9 />*/}\r\n            {/*<HW10/>*/}\r\n            {/*<HW11/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from 'react'\r\n\r\nfunction SuperJunior() {\r\n    return (\r\n        <div>\r\n            {/*<HW12/>*/}\r\n            {/*<HW13/>*/}\r\n            {/*<HW14 />*/}\r\n            {/*<HW15/>*/}\r\n            {/*<HW16/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperJunior","import React from 'react'\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\"\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport SuperJunior from \"./pages/SuperJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    SUPER_JUNIOR: '/super-junior',\n    ERROR404: '/error404'\n    /// add paths\n}\n\nfunction Pages() {\n    return (\n        <div>\n            {/*Routes выбирает первый подходящий роут*/}\n            <Routes >\n\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.SUPER_JUNIOR} element={<SuperJunior/>}/>\n                /// add routes\n\n                он отрисуется если пользователь захочет попасть на несуществующую страницу\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./pages/Header.module.css\"\nimport {PATH} from \"./Pages\";\n\nfunction Header() {\n    let[click, setClick] = useState<boolean>(false)\n\n    const onClickHandler = () => {\n        setClick(!click)\n\n    }\n    return (\n        <div className={s.wrapper}>\n            <div className={ `${s.panel} ${click ? s.panelActive : s.panel}`}>\n                <nav className={s.content}>\n                    <NavLink to={PATH.PRE_JUNIOR} className={s.preJunior}>Pre-junior</NavLink>\n                    <NavLink to={PATH.JUNIOR} className={s.junior}>Junior</NavLink>\n                    <NavLink to={PATH.SUPER_JUNIOR} className={s.superJunior}>Super junior</NavLink>\n                    {/*add NavLinks*/}\n                </nav>\n                <button className={s.btn} onClick={onClickHandler}>click</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Pages from './Pages'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            react homeworks\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}